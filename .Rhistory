summary(fit.dv)  # path b
anova(fit.dv)
summary(fit.totaleffect)  #path c
anova(fit.totaleffect)
anova(fit.dv)
anova(fit.totaleffect)
anova(fit.mediator)
anova(fit.mediator)
summary(fit.mediator)
anova(fit.totaleffect)
anova(fit.dv)
summary(fit.dv)
summary(fit.dv)
summary(fit.mediator)$coef
confint(fit.mediator)
confint(fit.dv)
summary(results)
anova(fit.totaleffect)
rm(list = ls(pattern = "\\model"))  ###remove previous models
rm(list = ls(pattern = "^data")) ### c
rm(list = ls(pattern = "^mu")) ### c
rm(list = ls(pattern = "^dp")) ### c
rm(list = ls(pattern = "^plot")) ### c
rm(list = ls(pattern = "^df")) ### c
data<-readr::read_csv("occipital_timeinc.csv",show_col_types = FALSE)
colnames(data)
#centering
center_scale <- function(x) {scale(x, scale = TRUE)}
# apply it
data$edgedisCS<-c(center_scale(data$edgedis))
data$logRT=log1p(data$responsetime)
data$cer<-c(center_scale(data$certain))
# pkg <- "package:lmerTest"
# library(lmerTest)
# detach(pkg, character.only = TRUE)
# #create empty dataframe
# df <- data.frame(t=double(),
#                  c_slope=double(),
#                  c_slope_p=double(),
#                  dv_eff=double(),
#                  ACME=double(),
#                  ADE=double(),
#                  TE=double(),
#                  PropMA=double(),
#                  ACME_p=double(),
#                  ADE_p=double(),
#                  TE_p=double(),
#                  PropMA_p=double(),
#                  stringsAsFactors=FALSE)
# for (i in 1:53) {
#       data$L=data[[i+8]]
#       data$R=data[[i+8+53]]
# data <-data %>%
#       mutate(Latindex=ifelse(sidecue==0,data$R-data$L,NA)) %>%
#       mutate(Latindex=ifelse(sidecue==1,data$L-data$R,Latindex))
#       data$csLatindex<-c(center_scale(data$Latindex))
#       library(lmerTest)
#       fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
#       fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
#       fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
#       sm=summary(fit.dv)
#       smc=sm[["coefficients"]]
#       sm2=summary(fit.totaleffect)
#       smc2=sm2[["coefficients"]]
#       df[i,1]=(i*0.05)-0.025
#       df[i,2]=fit.totaleffect@pp$delb[2]
#       df[i,3]=smc2[2,5]
#       df[i,4]=0
#       detach(pkg, character.only = TRUE)
#       fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
#       fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
#       fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
# results = mediation::mediate(fit.mediator, fit.dv, treat="edgedisCS",   mediator="cer")
# summary(results)
#       df[i,5]=results$d0  #ACME
#       df[i,6]=results$z0  #ADE
#       df[i,7]=results$tau.coef   #total effect
#       df[i,8]=results$n0   #prop mediated
#       df[i,9]=results$d0.p
#       df[i,10]=results$z0.p
#       df[i,11]=results$tau.p
#       df[i,12]=results$n0.p
# }
# write.csv(df,"C:/levEEGanalysis/main/paper_results_code/DRAFTS/finalR_07072022/N2timeinc_results_meds.csv")
df<-readr::read_csv("N2timeinc_results_meds.csv",show_col_types = FALSE)
### later mediation
pkg <- "package:lmerTest"
library(lmerTest)
data$L=rowMeans(data[,c(17+8, 18+8, 19+8, 20+8, 21+8)])
data$R=rowMeans(data[,c(17+8+53, 18+8+53, 19+8+53, 20+8+53, 21+8+53)])
data <-data %>%
mutate(Latindex=ifelse(sidecue==0,data$R-data$L,NA)) %>%
mutate(Latindex=ifelse(sidecue==1,data$L-data$R,Latindex))
data$csLatindex<-c(center_scale(data$Latindex))
sm=summary(fit.dv)
smc=sm[["coefficients"]]
sm2=summary(fit.totaleffect)
smc2=sm2[["coefficients"]]
detach(pkg, character.only = TRUE)
fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
results = mediation::mediate(fit.mediator, fit.dv, treat="edgedisCS",   mediator="cer")
library(pbkrtest)
library(lmerTest)
library(tidyverse)
library(nlme)
library(lattice)
library(stats)
library(psycho)
library(dplyr)
library(ggpubr)
library(sjstats)
library(effects)
library(sjPlot)
library(webshot)
library(psych)
library(Hmisc)
library(pastecs)
library(performance)
library(see)
library(patchwork)
library(openintro)
library(e1071)
library(ggplot2)
library(interactions)
library(plyr)
library(car)
library(mediation)
library(insight)
library(mclogit)
library(mlogit)
library(memisc)
library(MuMIn)
library(modelsummary)
library(nnet)
library(stargazer)
library(splines2)
library(splines)
library(DescTools)
library(flexplot)
library(simr)
library(pwr)
rm(list = ls(pattern = "\\model"))  ###remove previous models
rm(list = ls(pattern = "^data")) ### c
rm(list = ls(pattern = "^mu")) ### c
rm(list = ls(pattern = "^dp")) ### c
rm(list = ls(pattern = "^plot")) ### c
rm(list = ls(pattern = "^df")) ### c
data<-readr::read_csv("occipital_timeinc.csv",show_col_types = FALSE)
colnames(data)
#centering
center_scale <- function(x) {scale(x, scale = TRUE)}
# apply it
data$edgedisCS<-c(center_scale(data$edgedis))
data$logRT=log1p(data$responsetime)
data$cer<-c(center_scale(data$certain))
# pkg <- "package:lmerTest"
# library(lmerTest)
# detach(pkg, character.only = TRUE)
# #create empty dataframe
# df <- data.frame(t=double(),
#                  c_slope=double(),
#                  c_slope_p=double(),
#                  dv_eff=double(),
#                  ACME=double(),
#                  ADE=double(),
#                  TE=double(),
#                  PropMA=double(),
#                  ACME_p=double(),
#                  ADE_p=double(),
#                  TE_p=double(),
#                  PropMA_p=double(),
#                  stringsAsFactors=FALSE)
# for (i in 1:53) {
#       data$L=data[[i+8]]
#       data$R=data[[i+8+53]]
# data <-data %>%
#       mutate(Latindex=ifelse(sidecue==0,data$R-data$L,NA)) %>%
#       mutate(Latindex=ifelse(sidecue==1,data$L-data$R,Latindex))
#       data$csLatindex<-c(center_scale(data$Latindex))
#       library(lmerTest)
#       fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
#       fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
#       fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
#       sm=summary(fit.dv)
#       smc=sm[["coefficients"]]
#       sm2=summary(fit.totaleffect)
#       smc2=sm2[["coefficients"]]
#       df[i,1]=(i*0.05)-0.025
#       df[i,2]=fit.totaleffect@pp$delb[2]
#       df[i,3]=smc2[2,5]
#       df[i,4]=0
#       detach(pkg, character.only = TRUE)
#       fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
#       fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
#       fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
# results = mediation::mediate(fit.mediator, fit.dv, treat="edgedisCS",   mediator="cer")
# summary(results)
#       df[i,5]=results$d0  #ACME
#       df[i,6]=results$z0  #ADE
#       df[i,7]=results$tau.coef   #total effect
#       df[i,8]=results$n0   #prop mediated
#       df[i,9]=results$d0.p
#       df[i,10]=results$z0.p
#       df[i,11]=results$tau.p
#       df[i,12]=results$n0.p
# }
# write.csv(df,"C:/levEEGanalysis/main/paper_results_code/DRAFTS/finalR_07072022/N2timeinc_results_meds.csv")
df<-readr::read_csv("N2timeinc_results_meds.csv",show_col_types = FALSE)
### later mediation
pkg <- "package:lmerTest"
library(lmerTest)
data$L=rowMeans(data[,c(17+8, 18+8, 19+8, 20+8, 21+8)])
data$R=rowMeans(data[,c(17+8+53, 18+8+53, 19+8+53, 20+8+53, 21+8+53)])
data <-data %>%
mutate(Latindex=ifelse(sidecue==0,data$R-data$L,NA)) %>%
mutate(Latindex=ifelse(sidecue==1,data$L-data$R,Latindex))
data$csLatindex<-c(center_scale(data$Latindex))
sm=summary(fit.dv)
### later mediation
pkg <- "package:lmerTest"
library(lmerTest)
data$L=rowMeans(data[,c(17+8, 18+8, 19+8, 20+8, 21+8)])
data$R=rowMeans(data[,c(17+8+53, 18+8+53, 19+8+53, 20+8+53, 21+8+53)])
data <-data %>%
mutate(Latindex=ifelse(sidecue==0,data$R-data$L,NA)) %>%
mutate(Latindex=ifelse(sidecue==1,data$L-data$R,Latindex))
data$csLatindex<-c(center_scale(data$Latindex))
detach(pkg, character.only = TRUE)
fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
results = mediation::mediate(fit.mediator, fit.dv, treat="edgedisCS",   mediator="cer")
summary(results)
library(lmerTest)
fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
summary(fit.mediator)  #- path a
anova(fit.mediator)
confint(fit.mediator)
summary(fit.totaleffect)  #path c
anova(fit.totaleffect)
summary(fit.dv)  # path b
anova(fit.dv)
confint(fit.dv)
data<-readr::read_csv("cpp_fromcue_timeinc.csv") ##with baseline
colnames(data)
data$texrot...66
data$texrot...71
colnames(data)
rmarkdown::render("loadlibraries.Rmd")
rm(list = ls(pattern = "\\model"))  ###remove previous models
rm(list = ls(pattern = "^data")) ### c
rm(list = ls(pattern = "^mu")) ### c
rm(list = ls(pattern = "^dp")) ### c
rm(list = ls(pattern = "^plot")) ### c
rm(list = ls(pattern = "^df")) ### c
data<-readr::read_csv("cpp_fromcue_timeinc.csv") ##with baseline
center_scale <- function(x) {scale(x, scale = TRUE)}
# apply it
data$edgedisCS<-c(center_scale(data$edgedis))
data$logRT=log1p(data$responsetime)
# significant time period F data for paper- cluster level correction used from monte carlo below (also see matlab code). this worked out the average f across all the time period
data$Ave2<-NA
data$Ave2<-rowMeans(data[,c(12+22, 16+22)])
data$csAve2<-c(center_scale(data$Ave2))
model.a=lmer(csAve2 ~   certain2*correct2    + (1|ParticipantPrivateID), data=data,REML = FALSE);
summary(model.a)
anova(model.a)
confint(model.a)
data$Ave3<-NA
data$Ave3<-rowMeans(data[,c(24+22, 26+22)])
data$csAve3<-c(center_scale(data$Ave3))
model.b=lmer(csAve3 ~   certain2*correct2    + (1|ParticipantPrivateID), data=data,REML = FALSE);
summary(model.b)
anova(model.b)
confint(model.a)
data,[,12+22]
data[,12+22]
26*0.0500
rmarkdown::render("loadlibraries.Rmd")
rm(list = ls(pattern = "\\model"))  ###remove previous models
rm(list = ls(pattern = "^data")) ### c
rm(list = ls(pattern = "^mu")) ### c
rm(list = ls(pattern = "^dp")) ### c
rm(list = ls(pattern = "^plot")) ### c
rm(list = ls(pattern = "^df")) ### c
data<-readr::read_csv("cpp_fromcue_timeinc.csv") ##with baseline
center_scale <- function(x) {scale(x, scale = TRUE)}
# apply it
data$edgedisCS<-c(center_scale(data$edgedis))
data$logRT=log1p(data$responsetime)
# significant time period F data for paper- cluster level correction used from monte carlo below (also see matlab code). this worked out the average f across all the time period
data$Ave2<-NA
data$Ave2<-rowMeans(data[,c(12+22, 16+22)])
data$csAve2<-c(center_scale(data$Ave2))
model.a=lmer(csAve2 ~   certain2*correct2    + (1|ParticipantPrivateID), data=data,REML = FALSE);
summary(model.a)
anova(model.a)
confint(model.a)
data$Ave3<-NA
data$Ave3<-rowMeans(data[,c(24+22, 26+22)])
data$csAve3<-c(center_scale(data$Ave3))
model.b=lmer(csAve3 ~   certain2*correct2    + (1|ParticipantPrivateID), data=data,REML = FALSE);
summary(model.b)
anova(model.b)
confint(model.a)
.8/0.05
colname(data)
colnames(data)
rmarkdown::render("loadlibraries.Rmd")
rm(list = ls(pattern = "\\model"))  ###remove previous models
rm(list = ls(pattern = "^data")) ### c
rm(list = ls(pattern = "^mu")) ### c
rm(list = ls(pattern = "^dp")) ### c
rm(list = ls(pattern = "^plot")) ### c
rm(list = ls(pattern = "^df")) ### c
data<-readr::read_csv("cpp_fromcue_timeinc.csv") ##with baseline
center_scale <- function(x) {scale(x, scale = TRUE)}
# apply it
data$edgedisCS<-c(center_scale(data$edgedis))
data$logRT=log1p(data$responsetime)
# significant time period F data for paper- cluster level correction used from monte carlo below (also see matlab code). this worked out the average f across all the time period
data$Ave2<-NA
data$Ave2<-rowMeans(data[,c(12+8, 16+8)])
data$csAve2<-c(center_scale(data$Ave2))
model.a=lmer(csAve2 ~   certain2*correct2    + (1|ParticipantPrivateID), data=data,REML = FALSE);
summary(model.a)
anova(model.a)
confint(model.a)
data$Ave3<-NA
data$Ave3<-rowMeans(data[,c(24+8, 26+8)])
data$csAve3<-c(center_scale(data$Ave3))
model.b=lmer(csAve3 ~   certain2*correct2    + (1|ParticipantPrivateID), data=data,REML = FALSE);
summary(model.b)
anova(model.b)
confint(model.a)
rmarkdown::render("loadlibraries.Rmd")
rm(list = ls(pattern = "\\model"))  ###remove previous models
rm(list = ls(pattern = "^data")) ### c
rm(list = ls(pattern = "^mu")) ### c
rm(list = ls(pattern = "^dp")) ### c
rm(list = ls(pattern = "^plot")) ### c
rm(list = ls(pattern = "^df")) ### c
data<-readr::read_csv("occipital_timeinc.csv",show_col_types = FALSE)
colnames(data)
#centering
center_scale <- function(x) {scale(x, scale = TRUE)}
# apply it
data$edgedisCS<-c(center_scale(data$edgedis))
data$logRT=log1p(data$responsetime)
data$cer<-c(center_scale(data$certain))
# pkg <- "package:lmerTest"
# library(lmerTest)
# detach(pkg, character.only = TRUE)
# #create empty dataframe
# df <- data.frame(t=double(),
#                  c_slope=double(),
#                  c_slope_p=double(),
#                  dv_eff=double(),
#                  ACME=double(),
#                  ADE=double(),
#                  TE=double(),
#                  PropMA=double(),
#                  ACME_p=double(),
#                  ADE_p=double(),
#                  TE_p=double(),
#                  PropMA_p=double(),
#                  stringsAsFactors=FALSE)
# for (i in 1:53) {
#       data$L=data[[i+8]]
#       data$R=data[[i+8+53]]
# data <-data %>%
#       mutate(Latindex=ifelse(sidecue==0,data$R-data$L,NA)) %>%
#       mutate(Latindex=ifelse(sidecue==1,data$L-data$R,Latindex))
#       data$csLatindex<-c(center_scale(data$Latindex))
#       library(lmerTest)
#       fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
#       fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
#       fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
#       sm=summary(fit.dv)
#       smc=sm[["coefficients"]]
#       sm2=summary(fit.totaleffect)
#       smc2=sm2[["coefficients"]]
#       df[i,1]=(i*0.05)-0.025
#       df[i,2]=fit.totaleffect@pp$delb[2]
#       df[i,3]=smc2[2,5]
#       df[i,4]=0
#       detach(pkg, character.only = TRUE)
#       fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
#       fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
#       fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
# results = mediation::mediate(fit.mediator, fit.dv, treat="edgedisCS",   mediator="cer")
# summary(results)
#       df[i,5]=results$d0  #ACME
#       df[i,6]=results$z0  #ADE
#       df[i,7]=results$tau.coef   #total effect
#       df[i,8]=results$n0   #prop mediated
#       df[i,9]=results$d0.p
#       df[i,10]=results$z0.p
#       df[i,11]=results$tau.p
#       df[i,12]=results$n0.p
# }
# write.csv(df,"C:/levEEGanalysis/main/paper_results_code/DRAFTS/finalR_07072022/N2timeinc_results_meds.csv")
df<-readr::read_csv("N2timeinc_results_meds.csv",show_col_types = FALSE)
### later mediation
pkg <- "package:lmerTest"
library(lmerTest)
data$L=rowMeans(data[,c(17+8, 18+8, 19+8, 20+8, 21+8)])
data$R=rowMeans(data[,c(17+8+53, 18+8+53, 19+8+53, 20+8+53, 21+8+53)])
data <-data %>%
mutate(Latindex=ifelse(sidecue==0,data$R-data$L,NA)) %>%
mutate(Latindex=ifelse(sidecue==1,data$L-data$R,Latindex))
data$csLatindex<-c(center_scale(data$Latindex))
detach(pkg, character.only = TRUE)
fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
results = mediation::mediate(fit.mediator, fit.dv, treat="edgedisCS",   mediator="cer")
summary(results)
library(lmerTest)
fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=data,REML = FALSE);
fit.totaleffect=lmer(csLatindex ~ edgedisCS*texrot     + (1|subj), data=data,REML = FALSE);
fit.dv=lmer(csLatindex ~ edgedisCS*texrot + cer    + (1|subj), data=data,REML = FALSE);
summary(fit.mediator)  #- path a
anova(fit.mediator)
confint(fit.mediator)
summary(fit.totaleffect)  #path c
anova(fit.totaleffect)
summary(fit.dv)  # path b
anova(fit.dv)
confint(fit.dv)
rmarkdown::render("loadlibraries.Rmd")
rm(list = ls(pattern = "\\model"))  ###remove previous models
rm(list = ls(pattern = "^data")) ### c
rm(list = ls(pattern = "^mu")) ### c
rm(list = ls(pattern = "^dp")) ### c
rm(list = ls(pattern = "^plot")) ### c
data<-readr::read_csv("targetCPP.csv")
factor(data$subj)
colnames(data)
#centre scale edgedis
center_scale <- function(x) {scale(x, scale = TRUE)}
data$edgedisCS<-c(center_scale(data$edgedis))
#logRT
data$logRT=log1p(data$responsetime)
data$cstargetCPP<-c(center_scale(data$targetCPP))
hist(data$cstargetCPP)
data$cstargetCPP[data$cstargetCPP < -5 | data$cstargetCPP > 5] <- NaN[]
model.cpp=lmer(cstargetCPP ~ correct2+certain2+logRT+(1|subj), data=data, REML = FALSE);
summary(model.cpp)
anova(model.cpp)
model.cpp2=lmer(cstargetCPP ~ edgedisCS*texrot+ (1|subj), data=data, REML = FALSE);
summary(model.cpp2)
anova(model.cpp2)
pick=is.na(data$cstargetCPP)#pick data with CPP values
dataC=data[!pick,]
data$cer<-c(center_scale(data$certain))
library(lmerTest)
pkg <- "package:lmerTest"
detach(pkg, character.only = TRUE)  # remove else mediation won't work
data$texrot=factor(data$texrot, levels=c("deg0","deg45","deg90"), order=FALSE)
fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=dataC,REML = FALSE);
rmarkdown::render("loadlibraries.Rmd")
rm(list = ls(pattern = "\\model"))  ###remove previous models
rm(list = ls(pattern = "^data")) ### c
rm(list = ls(pattern = "^mu")) ### c
rm(list = ls(pattern = "^dp")) ### c
rm(list = ls(pattern = "^plot")) ### c
data<-readr::read_csv("targetCPP.csv")
factor(data$subj)
colnames(data)
#centre scale edgedis
center_scale <- function(x) {scale(x, scale = TRUE)}
data$edgedisCS<-c(center_scale(data$edgedis))
#logRT
data$logRT=log1p(data$responsetime)
data$cstargetCPP<-c(center_scale(data$targetCPP))
hist(data$cstargetCPP)
data$cstargetCPP[data$cstargetCPP < -5 | data$cstargetCPP > 5] <- NaN[]
model.cpp=lmer(cstargetCPP ~ correct2+certain2+logRT+(1|subj), data=data, REML = FALSE);
summary(model.cpp)
anova(model.cpp)
model.cpp2=lmer(cstargetCPP ~ edgedisCS*texrot+ (1|subj), data=data, REML = FALSE);
summary(model.cpp2)
anova(model.cpp2)
pick=is.na(data$cstargetCPP)#pick data with CPP values
dataC=data[!pick,]
dataC$cer<-c(center_scale(dataC$certain))
library(lmerTest)
pkg <- "package:lmerTest"
detach(pkg, character.only = TRUE)  # remove else mediation won't work
data$texrot=factor(data$texrot, levels=c("deg0","deg45","deg90"), order=FALSE)
fit.mediator=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=dataC,REML = FALSE);
fit.totaleffect=lmer(cstargetCPP ~ edgedisCS*texrot     + (1|subj), data=dataC,REML = FALSE);
fit.dv=lmer(cstargetCPP ~ edgedisCS*texrot + cer    + (1|subj), data=dataC,REML = FALSE);
results = mediation::mediate(fit.mediator, fit.dv, treat="edgedisCS",   mediator="cer")
summary(results)
library(lmerTest) # add back for full summaries/ anova info
fit.mediator2=lmer(cer ~ edgedisCS*texrot  + (1|subj), data=dataC,REML = FALSE);
fit.totaleffect2=lmer(cstargetCPP ~ edgedisCS*texrot     + (1|subj), data=dataC,REML = FALSE);
fit.dv2=lmer(cstargetCPP ~ edgedisCS*texrot + cer    + (1|subj), data=dataC,REML = FALSE);
summary(fit.mediator) #edgedis - path a
anova(fit.mediator2)
summary(fit.dv) # certain - path b
anova(fit.dv2)
summary(fit.totaleffect) # edgedis total effect - path c
anova(fit.totaleffect2)
rmarkdown::render("N2pc_cue_behavioural")
rmarkdown::render("N2pc_cue_behavioural.Rmd")
